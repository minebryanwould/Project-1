local VirtualUser = game:GetService("VirtualUser")
game:GetService("Players").LocalPlayer.Idled:Connect(function()
    VirtualUser:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
    wait(1)
    VirtualUser:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
end)

local UserInputService = game:GetService("UserInputService")
local infiniteJumpEnabled = true
local player = game:GetService("Players").LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

local lastJumpTime = 0
local jumpDelay = 0.5 -- Delay between jump presses to prevent double/triple jumps

-- Infinite Jump function (works like Delta InfYield, with reduced sensitivity)
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed then
        if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.Keyboard then
            if tick() - lastJumpTime > jumpDelay then
                lastJumpTime = tick()  -- Update last jump time
                if infiniteJumpEnabled then
                    humanoid:ChangeState("Jumping")
                end
            end
        end
    end
end)

-- Full Brightness and No Fog function
local function applyFullBrightAndNoFog()
    local Lighting = game:GetService("Lighting")
    Lighting.Brightness = 10
    Lighting.ClockTime = 12
    Lighting.FogEnd = 1e10
    Lighting.GlobalShadows = false
    Lighting.OutdoorAmbient = Color3.new(1, 1, 1)
    Lighting.Ambient = Color3.new(1, 1, 1)
end

-- Apply Full Brightness and No Fog continuously
applyFullBrightAndNoFog()
game:GetService("RunService").RenderStepped:Connect(applyFullBrightAndNoFog)
